name: zapizi

networks:
  zapizi_net:
    driver: bridge

volumes:
  chatwoot_db_data: {}
  chatwoot_redis_data: {}
  evoapi_db_data: {}
  evoapi_redis_data: {}
  n8n_db_data: {}
  n8n_redis_data: {}
  n8n_storage: {}

services:
  chatwoot-db:
    image: pgvector/pgvector:pg15
    container_name: chatwoot-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${CHATWOOT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROJECT_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${PROJECT_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - chatwoot_db_data:/var/lib/postgresql/data
    networks: [zapizi_net]

  chatwoot-redis:
    image: redis:7-alpine
    container_name: chatwoot-redis
    restart: unless-stopped
    command: >
      sh -c "redis-server --save 20 1 --loglevel warning
             --requirepass ${CHATWOOT_REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${CHATWOOT_REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - chatwoot_redis_data:/data
    networks: [zapizi_net]

  chatwoot:
    image: chatwoot/chatwoot:v4.4.0
    container_name: chatwoot
    restart: unless-stopped
    depends_on:
      chatwoot-db:
        condition: service_healthy
      chatwoot-redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      SECRET_KEY_BASE: ${CHATWOOT_SECRET_KEY_BASE}
      FRONTEND_URL: ${CHATWOOT_FRONTEND_URL}
      DEFAULT_LOCALE: pt-BR
      FORCE_SSL: "true"
      ENABLE_ACCOUNT_SIGNUP: "true"
      NODE_ENV: production
      RAILS_ENV: production
      RAILS_MAX_THREADS: "5"
      INSTALLATION_ENV: docker
      TRUSTED_PROXIES: "*"
      POSTGRES_HOST: chatwoot-db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${CHATWOOT_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${PROJECT_NAME}
      REDIS_URL: redis://:${CHATWOOT_REDIS_PASSWORD}@chatwoot-redis:6379
      REDIS_PASSWORD: ${CHATWOOT_REDIS_PASSWORD}
      RAILS_CACHE_REDIS_URL: redis://:${CHATWOOT_REDIS_PASSWORD}@chatwoot-redis:6379
      REDIS_OPENSSL_VERIFY_MODE: none
    command: >
      /bin/sh -lc "bundle exec rails db:chatwoot_prepare &&
                   bundle exec rails s -p 3000 -b 0.0.0.0"
    networks: [zapizi_net]

  chatwoot-sidekiq:
    image: chatwoot/chatwoot:v4.4.0
    container_name: chatwoot-sidekiq
    restart: unless-stopped
    depends_on:
      chatwoot-db:
        condition: service_healthy
      chatwoot-redis:
        condition: service_healthy
    environment:
      SECRET_KEY_BASE: ${CHATWOOT_SECRET_KEY_BASE}
      RAILS_ENV: production
      NODE_ENV: production
      POSTGRES_HOST: chatwoot-db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ${CHATWOOT_POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${PROJECT_NAME}
      REDIS_OPENSSL_VERIFY_MODE: none
      REDIS_URL: redis://:${CHATWOOT_REDIS_PASSWORD}@chatwoot-redis:6379
      REDIS_PASSWORD: ${CHATWOOT_REDIS_PASSWORD}
      RAILS_CACHE_REDIS_URL: redis://:${CHATWOOT_REDIS_PASSWORD}@chatwoot-redis:6379
    command: bundle exec sidekiq -C config/sidekiq.yml
    networks: [zapizi_net]

  evolution-api-db:
    image: postgres:15
    container_name: evolution-api-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${EVOAPI_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROJECT_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${PROJECT_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - evoapi_db_data:/var/lib/postgresql/data
    networks: [zapizi_net]

  evolution-api-redis:
    image: redis:7-alpine
    container_name: evolution-api-redis
    restart: unless-stopped
    command: >
      sh -c "redis-server --save 20 1 --loglevel warning
             --requirepass ${EVOAPI_REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${EVOAPI_REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - evoapi_redis_data:/data
    networks: [zapizi_net]

  evolution-api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution-api
    restart: unless-stopped
    depends_on:
      evolution-api-db:
        condition: service_healthy
      evolution-api-redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SERVER_TYPE: http
      SERVER_PORT: "8080"
      SERVER_URL: https://${PRIMARY_DOMAIN}
      SENTRY_DSN: ""
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PUT,DELETE"
      CORS_CREDENTIALS: "true"
      LOG_LEVEL: "ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS,WEBSOCKET"
      LOG_COLOR: "true"
      LOG_BAILEYS: "error"
      EVENT_EMITTER_MAX_LISTENERS: "50"
      DEL_INSTANCE: "false"
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: postgres://postgres:${EVOAPI_POSTGRES_PASSWORD}@evolution-api-db:5432/${PROJECT_NAME}
      DATABASE_CONNECTION_CLIENT_NAME: evolution_exchange
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "true"
      DATABASE_SAVE_DATA_HISTORIC: "true"
      DATABASE_SAVE_IS_ON_WHATSAPP: "true"
      DATABASE_SAVE_IS_ON_WHATSAPP_DAYS: "7"
      DATABASE_DELETE_MESSAGE: "true"
      RABBITMQ_ENABLED: "false"
      RABBITMQ_URI: amqp://localhost
      RABBITMQ_EXCHANGE_NAME: evolution
      RABBITMQ_GLOBAL_ENABLED: "false"
      SQS_ENABLED: "false"
      WEBSOCKET_ENABLED: "false"
      WEBSOCKET_GLOBAL_EVENTS: "false"
      PUSHER_ENABLED: "false"
      PUSHER_GLOBAL_ENABLED: "false"
      PUSHER_GLOBAL_APP_ID: ""
      PUSHER_GLOBAL_KEY: ""
      PUSHER_GLOBAL_SECRET: ""
      PUSHER_GLOBAL_CLUSTER: ""
      PUSHER_GLOBAL_USE_TLS: "true"
      WEBHOOK_GLOBAL_ENABLED: "false"
      WEBHOOK_GLOBAL_URL: ""
      WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS: "false"
      WEBHOOK_EVENTS_APPLICATION_STARTUP: "false"
      WEBHOOK_EVENTS_QRCODE_UPDATED: "true"
      WEBHOOK_EVENTS_MESSAGES_SET: "true"
      WEBHOOK_EVENTS_MESSAGES_UPSERT: "true"
      WEBHOOK_EVENTS_MESSAGES_EDITED: "true"
      WEBHOOK_EVENTS_MESSAGES_UPDATE: "true"
      WEBHOOK_EVENTS_MESSAGES_DELETE: "true"
      WEBHOOK_EVENTS_SEND_MESSAGE: "true"
      WEBHOOK_EVENTS_CONTACTS_SET: "true"
      WEBHOOK_EVENTS_CONTACTS_UPSERT: "true"
      WEBHOOK_EVENTS_CONTACTS_UPDATE: "true"
      WEBHOOK_EVENTS_PRESENCE_UPDATE: "true"
      WEBHOOK_EVENTS_CHATS_SET: "true"
      WEBHOOK_EVENTS_CHATS_UPSERT: "true"
      WEBHOOK_EVENTS_CHATS_UPDATE: "true"
      WEBHOOK_EVENTS_CHATS_DELETE: "true"
      WEBHOOK_EVENTS_GROUPS_UPSERT: "true"
      WEBHOOK_EVENTS_GROUPS_UPDATE: "true"
      WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE: "true"
      WEBHOOK_EVENTS_CONNECTION_UPDATE: "true"
      WEBHOOK_EVENTS_REMOVE_INSTANCE: "false"
      WEBHOOK_EVENTS_LOGOUT_INSTANCE: "false"
      WEBHOOK_EVENTS_LABELS_EDIT: "true"
      WEBHOOK_EVENTS_LABELS_ASSOCIATION: "true"
      WEBHOOK_EVENTS_CALL: "true"
      WEBHOOK_EVENTS_TYPEBOT_START: "false"
      WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS: "false"
      WEBHOOK_EVENTS_ERRORS: "false"
      WEBHOOK_EVENTS_ERRORS_WEBHOOK: ""
      WA_BUSINESS_TOKEN_WEBHOOK: evolution
      WA_BUSINESS_URL: https://graph.facebook.com
      WA_BUSINESS_VERSION: v20.0
      WA_BUSINESS_LANGUAGE: en_US
      TYPEBOT_ENABLED: "false"
      TYPEBOT_API_VERSION: latest
      CHATWOOT_ENABLED: "true"
      CHATWOOT_MESSAGE_READ: "true"
      CHATWOOT_MESSAGE_DELETE: "true"
      CHATWOOT_BOT_CONTACT: "true"
      CHATWOOT_IMPORT_DATABASE_CONNECTION_URI: "postgresql://user:passwprd@host:5432/chatwoot?sslmode=disable"
      CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE: "true"
      OPENAI_ENABLED: "false"
      DIFY_ENABLED: "false"
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: redis://:${EVOAPI_REDIS_PASSWORD}@evolution-api-redis:6379
      CACHE_REDIS_TTL: "604800"
      CACHE_REDIS_PREFIX_KEY: evolution
      CACHE_REDIS_SAVE_INSTANCES: "false"
      CACHE_LOCAL_ENABLED: "false"
      S3_ENABLED: "false"
      S3_ACCESS_KEY: ""
      S3_SECRET_KEY: ""
      S3_BUCKET: evolution
      S3_PORT: "443"
      S3_ENDPOINT: s3.domain.com
      S3_REGION: eu-west-3
      S3_USE_SSL: "true"
      AUTHENTICATION_API_KEY: ${EVOAPI_AUTH_API_KEY}
      AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES: "true"
      LANGUAGE: en
      PROXY_HOST: ""
      PROXY_PORT: "80"
      PROXY_PROTOCOL: http
      PROXY_USERNAME: ""
      PROXY_PASSWORD: ""
    networks: [zapizi_net]

  n8n-postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${N8N_POSTGRES_PASSWORD}
      POSTGRES_DB: n8n
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - n8n_db_data:/var/lib/postgresql/data
    networks: [zapizi_net]

  n8n-redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: unless-stopped
    command: >
      sh -c "redis-server --save 20 1 --loglevel warning
             --requirepass ${N8N_REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${N8N_REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - n8n_redis_data:/data
    networks: [zapizi_net]

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    depends_on:
      n8n-postgres:
        condition: service_healthy
      n8n-redis:
        condition: service_healthy
    ports:
      - "5678:5678"
    environment:
      WEBHOOK_URL: https://${PRIMARY_DOMAIN}
      N8N_HOST: ${PRIMARY_DOMAIN}
      GENERIC_TIMEZONE: America/Sao_Paulo
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: "true"
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: n8n-postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: postgres
      DB_POSTGRESDB_PASSWORD: ${N8N_POSTGRES_PASSWORD}
      DB_POSTGRESDB_DATABASE: n8n
      N8N_REDIS_HOST: n8n-redis
      N8N_REDIS_PORT: 6379
      N8N_REDIS_PASSWORD: ${N8N_REDIS_PASSWORD}
      N8N_USER_FOLDER: /home/node/.n8n
    volumes:
      - n8n_storage:/home/node/.n8n
    networks: [zapizi_net]